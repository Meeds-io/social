<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2003-2011 eXo Platform SAS.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program. If not, see <http://www.gnu.org/licenses/>.

-->
<configuration
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.exoplatform.org/xml/ns/kernel_1_2.xsd http://www.exoplatform.org/xml/ns/kernel_1_2.xsd"
  xmlns="http://www.exoplatform.org/xml/ns/kernel_1_2.xsd">

	<component>		
		<type>org.exoplatform.commons.search.service.UnifiedSearchService</type>
	</component>
	
	<component>		
		<key>org.exoplatform.portal.config.UserPortalConfigService</key>
		<type>org.exoplatform.commons.search.service.MockUserPortalConfigService</type>
	</component>	

  <component>
    <key>org.exoplatform.portal.config.DataStorage</key>
    <type>org.exoplatform.commons.search.service.MockDataStorage</type>
  </component>
  <component>
  	<key>org.exoplatform.services.organization.OrganizationService</key>
  	<type>org.exoplatform.commons.search.service.MockOrganizationService</type>
  </component>
  
  <component>
    <key>org.exoplatform.portal.mop.navigation.NavigationService</key>
    <type>org.exoplatform.commons.search.service.MockNavigationService</type>
  </component>
    
  <component>
    <key>org.exoplatform.portal.mop.description.DescriptionService</key>
    <type>org.exoplatform.commons.search.service.MockDescriptionService</type>
  </component>
  
  <component>
    <key>org.exoplatform.portal.mop.page.PageService</key>
    <type>org.exoplatform.portal.mop.page.PageServiceWrapper</type>
  </component>

  <component>
    <type>org.exoplatform.services.rest.impl.ProvidersRegistry</type>
  </component>
  
  <component>
     <type>org.exoplatform.services.rest.impl.RequestHandlerImpl</type>
  </component>

  <component>
     <type>org.exoplatform.services.rest.impl.RequestDispatcher</type>
  </component>

  <component>
     <type>org.exoplatform.services.rest.impl.ResourceBinder</type>
  </component>

  <component>
     <type>org.exoplatform.services.rest.impl.provider.JAXBContextResolver</type>
  </component>


  <external-component-plugins>
     <target-component>org.exoplatform.services.rest.impl.provider.JAXBContextResolver</target-component>
     <component-plugin>
        <name>ws.rs.jaxb.context</name>
        <set-method>addPlugin</set-method>
        <type>org.exoplatform.services.rest.impl.provider.JAXBContextComponentPlugin</type>
        <init-params>
           <value-param>
              <name>wadl.application</name>
              <value>org.exoplatform.services.rest.wadl.research.Application</value>
           </value-param>
        </init-params>
     </component-plugin>
  </external-component-plugins>

  <external-component-plugins>
     <target-component>org.exoplatform.services.rest.impl.RequestHandlerImpl</target-component>
     <component-plugin>
        <name>ws.rs.entity.provider</name>
        <set-method>addPlugin</set-method>
        <type>org.exoplatform.services.rest.impl.provider.EntityProviderComponentPlugin</type>
        <!-- NOTE it is just example of configuration. -->
        <!-- StringEntityProvider is part of REST framework, not needs to add it from configuration -->
        <!--
        <init-params>
           <value-param>
              <name>strings</name>
              <value>org.exoplatform.services.rest.impl.provider.StringEntityProvider</value>
           </value-param>
        </init-params>
        -->
     </component-plugin>
     <component-plugin>
        <name>ws.rs.method.filter</name>
        <set-method>addPlugin</set-method>
        <type>org.exoplatform.services.rest.impl.method.MethodInvokerFilterComponentPlugin</type>
        <!--
        <init-params>
           <value-param>
              <name>name</name>
              <value>filter class</value>
           </value-param>
        </init-params>
        -->
     </component-plugin>
     <component-plugin>
        <name>ws.rs.request.filter</name>
        <set-method>addPlugin</set-method>
        <type>org.exoplatform.services.rest.impl.RequestFilterComponentPlugin</type>
        <!--
        <init-params>
           <value-param>
              <name>name</name>
              <value>filter class</value>
           </value-param>
        </init-params>
        -->
     </component-plugin>
     <component-plugin>
        <name>ws.rs.response.filter</name>
        <set-method>addPlugin</set-method>
        <type>org.exoplatform.services.rest.impl.ResponseFilterComponentPlugin</type>
        <!--
        <init-params>
           <value-param>
              <name>name</name>
              <value>filter class</value>
           </value-param>
        </init-params>
        -->
     </component-plugin>
  </external-component-plugins>  

</configuration>
