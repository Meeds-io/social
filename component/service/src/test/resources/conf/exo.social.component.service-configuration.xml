<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2003-2011 eXo Platform SAS.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program. If not, see <http://www.gnu.org/licenses/>.

-->
<configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.exoplatform.org/xml/ns/kernel_1_2.xsd http://www.exoplatform.org/xml/ns/kernel_1_2.xsd" xmlns="http://www.exoplatform.org/xml/ns/kernel_1_2.xsd">

  <component>
    <type>org.exoplatform.social.service.rest.AppsRestService</type>
  </component>

  <component>
    <type>org.exoplatform.social.service.rest.SpacesRestService</type>
  </component>

  <component>
    <type>org.exoplatform.social.service.rest.IdentityRestService</type>
  </component>

  <component>
    <type>org.exoplatform.social.service.rest.PeopleRestService</type>
  </component>

  <component>
    <type>org.exoplatform.social.service.rest.NotificationsRestService</type>
  </component>
  
  <component>
    <type>org.exoplatform.social.service.malwareDetection.MalwareDetectionService</type>
  </component>

  <component>
    <type>org.exoplatform.services.rest.impl.ProvidersRegistry</type>
  </component>
  
  <component>
     <type>org.exoplatform.services.rest.impl.RequestHandlerImpl</type>
  </component>

  <component>
     <type>org.exoplatform.services.rest.impl.RequestDispatcher</type>
  </component>

  <!-- Request/Response filters. -->
  <component>
     <type>org.exoplatform.services.rest.impl.ProvidersRegistry</type>
  </component>

  <component>
     <type>org.exoplatform.services.rest.impl.ResourceBinder</type>
  </component>

  <component>
     <type>org.exoplatform.services.rest.impl.provider.JAXBContextResolver</type>
  </component>

  <component>
    <key>org.exoplatform.upload.UploadService</key>
    <type>org.exoplatform.social.mock.MockUploadService</type>
    <init-params>
      <value-param>
        <name>upload.limit.size</name>
        <description>Maximum size of the file to upload in MB</description>
        <value>10</value>
      </value-param>
    </init-params>
  </component>

  <component>
    <type>org.exoplatform.web.WebAppController</type>
    <init-params>
      <value-param>
        <name>controller.config</name>
        <value>target/test-classes/conf/controller.xml</value>
      </value-param>
    </init-params>
  </component>


  <component>
    <type>org.exoplatform.web.url.URLFactoryService</type>
    <component-plugins>
      <component-plugin>
        <name>navigation.urlfactory.plugin</name>
        <set-method>addPlugin</set-method>
        <type>org.exoplatform.web.url.navigation.NodeURLFactoryPlugin</type>
      </component-plugin>
      <component-plugin>
        <name>navigation.urlfactory.plugin</name>
        <set-method>addPlugin</set-method>
        <type>org.exoplatform.portal.url.component.ComponentURLFactoryPlugin</type>
      </component-plugin>
      <component-plugin>
        <name>navigation.urlfactory.plugin</name>
        <set-method>addPlugin</set-method>
        <type>org.exoplatform.web.url.simple.SimpleURLFactoryPlugin</type>
      </component-plugin>
    </component-plugins>
  </component>

  <external-component-plugins>
    <target-component>org.exoplatform.web.WebAppController</target-component>
    <component-plugin>
      <name>UploadHandler</name>
      <set-method>register</set-method>
      <type>org.exoplatform.web.handler.UploadHandler</type>
    </component-plugin>
    <component-plugin>
      <name>DownloadHandler</name>
      <set-method>register</set-method>
      <type>org.exoplatform.web.handler.DownloadHandler</type>
    </component-plugin>
    <component-plugin>
      <name>PortalRequestHandler</name>
      <set-method>register</set-method>
      <type>org.exoplatform.portal.application.PortalRequestHandler</type>
    </component-plugin>
    <component-plugin>
      <name>LegacyRequestHandler</name>
      <set-method>register</set-method>
      <type>org.exoplatform.portal.application.LegacyRequestHandler</type>
    </component-plugin>
    <component-plugin>
      <name>DefaultRequestHandler</name>
      <set-method>register</set-method>
      <type>org.exoplatform.portal.application.DefaultRequestHandler</type>
    </component-plugin>
    <component-plugin>
      <name>ScriptRequestHandler</name>
      <set-method>register</set-method>
      <type>org.gatein.portal.controller.resource.ResourceRequestHandler</type>
    </component-plugin>
    <component-plugin>
      <name>SkinRequestHandler</name>
      <set-method>register</set-method>
      <type>org.exoplatform.portal.resource.SkinResourceRequestHandler</type>
    </component-plugin>
    <component-plugin>
      <name>StaticResourceRequestHandler</name>
      <set-method>register</set-method>
      <type>org.exoplatform.portal.application.StaticResourceRequestHandler</type>
    </component-plugin>
    <component-plugin>
      <name>RedirectRequestHandler</name>
      <set-method>register</set-method>
      <type>org.gatein.web.redirect.RedirectRequestHandler</type>
      <init-params> <!--browser.detection.path-->
        <value-param>
          <name>browser.detection.path</name>
          <description>Where the device detection page is located with respect to the portal web application
          </description>
          <value>/device/detection.jsp</value>
        </value-param>
      </init-params>
    </component-plugin>
    <component-plugin>
      <name>StandaloneAppRequestHandler</name>
      <set-method>register</set-method>
      <type>org.exoplatform.portal.application.StandaloneAppRequestHandler</type>
      <init-params>
        <value-param>
          <name>webui.configuration</name>
          <value>app:/WEB-INF/standalone-webui-configuration.xml</value>
        </value-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>

  <external-component-plugins>
      <target-component>org.exoplatform.services.rest.impl.RequestHandlerImpl</target-component>
      <component-plugin>
       <name>ws.rs.response.filter</name>
       <set-method>addPlugin</set-method>
       <type>org.exoplatform.services.rest.impl.ResponseFilterComponentPlugin</type>
       <init-params>
          <value-param>
             <name>ws.rs.response.social-response-filter</name>
             <value>org.exoplatform.social.rest.filter.SocialResponseFilter</value>
          </value-param>
       </init-params>
      </component-plugin>
  </external-component-plugins>
  <!-- Request/Response filters. -->
  
  <external-component-plugins>
     <target-component>org.exoplatform.services.rest.impl.provider.JAXBContextResolver</target-component>
     <component-plugin>
        <name>ws.rs.jaxb.context</name>
        <set-method>addPlugin</set-method>
        <type>org.exoplatform.services.rest.impl.provider.JAXBContextComponentPlugin</type>
        <init-params>
           <value-param>
              <name>wadl.application</name>
              <value>org.exoplatform.services.rest.wadl.research.Application</value>
           </value-param>
        </init-params>
     </component-plugin>
  </external-component-plugins>

  <external-component-plugins>
     <target-component>org.exoplatform.services.rest.impl.RequestHandlerImpl</target-component>
     <component-plugin>
        <name>ws.rs.entity.provider</name>
        <set-method>addPlugin</set-method>
        <type>org.exoplatform.services.rest.impl.provider.EntityProviderComponentPlugin</type>
        <!-- NOTE it is just example of configuration. -->
        <!-- StringEntityProvider is part of REST framework, not needs to add it from configuration -->
        <!--
        <init-params>
           <value-param>
              <name>strings</name>
              <value>org.exoplatform.services.rest.impl.provider.StringEntityProvider</value>
           </value-param>
        </init-params>
        -->
     </component-plugin>
     <component-plugin>
        <name>ws.rs.method.filter</name>
        <set-method>addPlugin</set-method>
        <type>org.exoplatform.services.rest.impl.method.MethodInvokerFilterComponentPlugin</type>
        <!--
        <init-params>
           <value-param>
              <name>name</name>
              <value>filter class</value>
           </value-param>
        </init-params>
        -->
     </component-plugin>
  </external-component-plugins>

  <external-component-plugins>
    <target-component>org.exoplatform.services.organization.OrganizationService</target-component>
    <component-plugin>
      <name>social.new.user.event.listener</name>
      <set-method>addListenerPlugin</set-method>
      <type>org.exoplatform.social.core.listeners.SocialUserEventListenerImpl</type>
    </component-plugin>
  </external-component-plugins>

</configuration>
