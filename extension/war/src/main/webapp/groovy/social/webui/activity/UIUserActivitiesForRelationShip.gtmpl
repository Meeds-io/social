<%
/*
<!--

  Copyright (C) 2003-2013 eXo Platform SAS.
 
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU Affero General Public License for more details.
 
  You should have received a copy of the GNU Affero General Public License
  along with this program. If not, see <http://www.gnu.org/licenses/>.

-->
*/

%>
<%
  import org.apache.commons.lang.ArrayUtils;
  import org.exoplatform.portal.webui.util.Util;
  import org.exoplatform.webui.form.UIFormTextAreaInput;
  import org.exoplatform.social.core.service.LinkProvider;
  import org.exoplatform.social.core.space.model.Space;
  import org.exoplatform.social.webui.Utils;
  import org.exoplatform.social.core.service.LinkProvider;
  import org.apache.commons.lang.StringEscapeUtils;

  import static org.exoplatform.social.webui.activity.BaseUIActivity.TEMPLATE_PARAM_COMMENT;

  def pcontext = Util.getPortalRequestContext();
  def labelActivityHasBeenDeleted = _ctx.appRes("UIActivity.label.Activity_Has_Been_Deleted");
  def activity = uicomponent.getActivity();
  def activityDeletable = uicomponent.isActivityDeletable();
  def activityCommentAndLikable = uicomponent.isActivityCommentAndLikable();
  def streamOwner = activity.getStreamOwner();
%>

<% if (activity) { //process if not null

  def jsManager = pcontext.getJavascriptManager().require("SHARED/uiForm");

  def labelLikesActivity = _ctx.appRes("UIActivity.label.likesLabel");
  def labelCancel = _ctx.appRes("UIActivity.label.Cancel");
  def labelLike = _ctx.appRes("UIActivity.label.Like");
  def labelUpdate = _ctx.appRes("UIActivity.label.Update");
  def labelEdit = _ctx.appRes("UIActivity.label.Edit");
  def labelDelete = _ctx.appRes("UIActivity.label.Delete");
  def labelUnlike = _ctx.appRes("UIActivity.label.Unlike");
  def labelSource = _ctx.appRes("UIActivity.label.Source");
  def inputWriteAComment = _ctx.appRes("UIActivity.input.Add_your_comment").replace("'", "\\'");
  
  def captionConfirmation=StringEscapeUtils.escapeHtml(_ctx.appRes("UIActivity.label.Confirmation"));
  def labelToDeleteThisActivity=StringEscapeUtils.escapeHtml(_ctx.appRes("UIActivity.msg.Are_You_Sure_To_Delete_This_Activity"));
  def labelConfirmbutton=StringEscapeUtils.escapeHtml(_ctx.appRes("UIActivity.label.Confirm_Delete_Activity-Button"));
  def labelClosebutton=StringEscapeUtils.escapeHtml(_ctx.appRes("UIActivity.label.Cancel_Delete_Activity-Button"));
  def labelToDeleteThisComment=StringEscapeUtils.escapeHtml(_ctx.appRes("UIActivity.msg.Are_You_Sure_To_Delete_This_Comment"));

  int allCommentSize = uicomponent.getAllCommentSize();y
  mechya m3aya 

  def commentFormDisplayed = uicomponent.isCommentFormDisplayed();
  def placeholder = _ctx.appRes("UIActivity.comment.placeholder").replace("'", "\\'");

  // labels
  def LikePopupTitleLabel = _ctx.appRes("UIActivity.title.PopupCommentLikers");
  def IgnoreLabel = _ctx.appRes("UserProfilePopup.label.Ignore");
  def ConnectLabel = _ctx.appRes("UserProfilePopup.label.Connect");
  def ConfirmLabel = _ctx.appRes("UserProfilePopup.label.Confirm");
  def CancelRequestLabel = _ctx.appRes("UserProfilePopup.label.CancelRequest");
  def RemoveConnectionLabel = _ctx.appRes("UserProfilePopup.label.RemoveConnection");
  def labels = """ {
    LikePopupTitle: '$LikePopupTitleLabel',
    Connect: '$ConnectLabel',
    Confirm: '$ConfirmLabel',
    CancelRequest: '$CancelRequestLabel',
    RemoveConnection: '$RemoveConnectionLabel',
    Ignore: '$IgnoreLabel'
  }"""
  def spaceGroupId = uicomponent.getSpaceGroupId();

  //params for init UIActivity javascript object
  def params = """ {
    activityId: '${activity.id}',
    placeholderComment: '${placeholder}',
    spaceGroupId: '$spaceGroupId',
    inputWriteAComment: '$inputWriteAComment',
    commentMinCharactersAllowed: '${uicomponent.getCommentMinCharactersAllowed()}',
    commentMaxCharactersAllowed: '${uicomponent.getCommentMaxCharactersAllowed()}',
    commentFormDisplayed: '$commentFormDisplayed',
    allCommentSize: '${allCommentSize}',
    commentFormFocused: '${uicomponent.isCommentFormFocused()}',
    labels: $labels
  } """

  jsManager.require("SHARED/jquery", "jq")
           .require("SHARED/bts_tooltip").addScripts("jq('*[rel=\"tooltip\"]').tooltip();")
           .require("SHARED/social-ui-activity", "activity").addScripts("activity.onLoad($params);");

  //make sures commentFormFocused is set to false to prevent any refresh to focus, only focus after post a comment
  uicomponent.setCommentFormFocused(false);
  def ownerName, ownerUri = "#", ownerAvatar, activityPostedTime, activityPostedTimeInSpace, activityUpdatedTime, absolutePostedTime;

  activityPostedTime = uicomponent.getRelativeTimeLabel(_ctx, activity.postedTime);
  activityUpdatedTime =uicomponent.getRelativeTimeLabel(_ctx, activity.updated.getTime());
  absolutePostedTime = uicomponent.getAbsolutePostedTime(activity.postedTime);
  def ownerIdentity = uicomponent.ownerIdentity;
  def profile = ownerIdentity.profile;

  if (uicomponent.isUserActivity()) {
    ownerUri = LinkProvider.getUserProfileUri(ownerIdentity.getRemoteId());
    ownerAvatar = profile.avatarUrl;
    ownerName = StringEscapeUtils.escapeHtml(profile.fullName);
    ownerSpaces = Utils.getSpaceService().getMemberSpaces(ownerIdentity.getRemoteId());
    if (!ownerAvatar) ownerAvatar= LinkProvider.PROFILE_DEFAULT_AVATAR_URL;
  } else if(uicomponent.isSpaceActivity()){
    Space space = Utils.getSpaceService().getSpaceByPrettyName(ownerIdentity.remoteId);
    ownerUri = Utils.getSpaceHomeURL(space);
    ownerAvatar = space.avatarUrl;
    ownerName = space.displayName;
    ownerDescription = space.description;
    ownerMembers = space.members;
    if (!ownerAvatar) ownerAvatar = LinkProvider.SPACE_DEFAULT_AVATAR_URL;
  } else {
    ownerUri = profile.url;
    ownerAvatar = profile.avatarUrl;
    ownerName = StringEscapeUtils.escapeHtml(profile.fullName);
  }
  def currentTime = System.currentTimeMillis();

  String viewActivityTip = _ctx.appRes("UIActivity.msg.ViewActivity");
  def deleteActivityTip = _ctx.appRes("UIActivity.msg.DeleteActivity");
  def viewerId = Utils.getViewerIdentity().getId();
%>

<div class="activityStream uiActivityStreamWrapper uiActivityRelationShip" id="activityContainer${activity.id}">
  <% uiform.begin() %>
  <!--<div class="activityTimeLine pull-left">
	<div class="activityAvatar avatarCircle">
		<a  href="$ownerUri">
		  <img alt="$ownerName" src="$ownerAvatar"/>
		</a>
	</div>

  </div> --><!--end activityTimeLine-->
 
    <div class="boxContainer" id="boxContainer">
	<div id="ContextBox${activity.id}" class="uiBox contentBox">
		<div id="ActivityContextBox${activity.id}">
		  <div class="heading">
				<span class="arrowLeft"></span>
			  
  <div class="activityHeader">
   <div class="activityAvatar avatarCircle">
		<a  href="$ownerUri">
		  <img alt="$ownerName" src="$ownerAvatar"/>
		</a>
	</div>
      <div class="activityAuthorAndDate">
				<div class="author">
					<div class="owner">
						<a  href="$ownerUri">$ownerName</a>
          </div>
				</div>
				<div class="dataInfor">
					<span class="dateTime"><i class="uiIconClock  uiIconLightGray"></i>&nbsp;<a id="EditActivityTime${activity.id}" rel="tooltip" data-placement="bottom" title="$absolutePostedTime" href="<%=uicomponent.getActivityPermalink(activity.id)%>"><%=_ctx.appRes("UIActivity.label.EditedFrom").replace("{0}",activityUpdatedTime)%></a></span>		
				</div>
      </div><!--end activityAuthorAndDate-->

      <!-- three dots activity menu -->

      <div id="dropDownEditActivity${activity.id}" class="btn-group uiDropdownWithIcon actLink">
      <div class="dropdown-toggle" data-toggle="dropdown">
      <i class="uiIconActivityAction uiIconLightGray">
      </i>
                            </div>
      <ul class="dropdown-menu pull-right" role="menu">
      <li>
      <a id="Permalink${activity.id}" rel="tooltip" data-placement="bottom" title="$viewActivityTip" href="<%=uicomponent.getActivityPermalink(activity.id)%>">$viewActivityTip</a>
                            </li>
      <%
      if (activityDeletable) {
      %>
      <li>
      <a href="javascript:void(0)" data-confirm="$labelToDeleteThisActivity" data-caption="$captionConfirmation" data-close="$labelClosebutton" data-ok="$labelConfirmbutton"  data-delete="<%=uicomponent.event("DeleteActivity", uicomponent.getId(), "");%>" class="controllDelete" id="DeleteActivityButton${activity.id}">${labelDelete}</a>

                                </li>
      <%}%>
      </ul>
                        </div>
  </div><!--end activityHeader-->

    <!-- end three dots activity menu -->

			</div><!--end heading-->
			<div class="description">$activity.title</div><!--end description-->
            <div class="desktop-input clearfix">
                <div class="blastInputPeople hideEffect">
                    <div>
                    <% uicomponent.renderChild(uicomponent.COMPOSER_TEXT_AREA_EDIT_INPUT+activity.id); %>
                        <div class="uiAction paddingAction">
                            <button class="btn pull-left btn-primary" onclick="<%=uicomponent.event("EditActivity")%>" id="EditActivityButton${activity.id}">${labelUpdate}</button>&nbsp;
                            <button href="javascript:void(0)" data-cancel-edit-comment-id="${activity.id}" class="btn pull-left" id="DeleteEditCommentButton${activity.id}">${labelCancel}</button>

                        </div>
                    </div>
                </div>
            </div>

            <% _ctx.includeTemplates("UIActivityActionBar-actions-mobile") %>

            <div class="actionsDetailsWrapper">
            <% _ctx.includeTemplates("UIActivityListLiked") %>
    <% _ctx.includeTemplates("UIActivityActionBar-actions") %>
		</div>
    <% _ctx.includeTemplates("UIActivityCommentBox") %>
		</div><!--end #ActivityContextBox${activity.id}-->
	</div> <!--end ContextBox${activity.id}-->	
  </div> <!-- #boxContainer-->	  
  <% uiform.end() %>
</div><!--activityStream-->
<% } else { %> <!-- activity deleted -->
<div class="activityStream deleted">$labelActivityHasBeenDeleted</div>
<% }%>
