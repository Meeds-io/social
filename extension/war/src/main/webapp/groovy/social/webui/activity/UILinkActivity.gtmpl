<%
/*
<!--

    Copyright (C) 2003-2007 eXo Platform SAS.

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU Affero General Public License
    as published by the Free Software Foundation; either version 3
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, see<http://www.gnu.org/licenses/>.

-->
*/
%>
<%
  import org.apache.commons.lang.ArrayUtils;
  import org.exoplatform.social.service.rest.Util;
  import org.exoplatform.webui.form.UIFormTextAreaInput;
  import org.exoplatform.social.core.service.LinkProvider;
  import org.exoplatform.social.core.space.model.Space;
  import org.exoplatform.social.webui.Utils;
  import org.exoplatform.social.webui.activity.UILinkUtil;
  import org.apache.commons.lang.StringEscapeUtils;
  import java.net.*;
  import static org.exoplatform.social.webui.activity.BaseUIActivity.TEMPLATE_PARAM_COMMENT;

  def pcontext = org.exoplatform.portal.webui.util.Util.getPortalRequestContext();
  def jsManager = pcontext.getJavascriptManager().require("SHARED/uiForm");
  def labelActivityHasBeenDeleted = _ctx.appRes("UIActivity.label.Activity_Has_Been_Deleted");
  def activity = uicomponent.getActivity();
  def activityDeletable = uicomponent.isActivityDeletable();
  def activityEditable = uicomponent.isActivityEditable(activity);
  def activityCommentAndLikable = uicomponent.isActivityCommentAndLikable();
  def streamOwner = activity.getStreamOwner();
%>

<% if (activity) { //process if not null

  def labelCancel = _ctx.appRes("UIActivity.label.Cancel");
  def labelUpdate = _ctx.appRes("UIActivity.label.Update");
  def labelEdit = _ctx.appRes("UIActivity.label.Edit");
  def labelDelete = _ctx.appRes("UIActivity.label.Delete");
  def inputWriteAComment = _ctx.appRes("UIActivity.input.Add_your_comment").replace("'", "\\'");

  def captionConfirmation=StringEscapeUtils.escapeHtml(_ctx.appRes("UIActivity.label.Confirmation"));
  def labelToDeleteThisActivity=StringEscapeUtils.escapeHtml(_ctx.appRes("UIActivity.msg.Are_You_Sure_To_Delete_This_Activity"));
  def labelConfirmbutton=StringEscapeUtils.escapeHtml(_ctx.appRes("UIActivity.label.Confirm_Delete_Activity-Button"));
  def labelClosebutton=StringEscapeUtils.escapeHtml(_ctx.appRes("UIActivity.label.Cancel_Delete_Activity-Button"));

  int allCommentSize = uicomponent.getAllCommentSize();

  def ownerRemoteId =  uicomponent.ownerIdentity.getRemoteId();
  def commentFormDisplayed = uicomponent.isCommentFormDisplayed();
  def placeholder = _ctx.appRes("UIActivity.comment.placeholder").replace("'", "\\'");

  def LikePopupTitleLabel = _ctx.appRes("UIActivity.title.PopupCommentLikers");
  def IgnoreLabel = _ctx.appRes("UserProfilePopup.label.Ignore");
  def ConnectLabel = _ctx.appRes("UserProfilePopup.label.Connect");
  def ConfirmLabel = _ctx.appRes("UserProfilePopup.label.Confirm");
  def CancelRequestLabel = _ctx.appRes("UserProfilePopup.label.CancelRequest");
  def RemoveConnectionLabel = _ctx.appRes("UserProfilePopup.label.RemoveConnection");
  def labels = """ {
    LikePopupTitle: '$LikePopupTitleLabel',
    Connect: '$ConnectLabel',
    Confirm: '$ConfirmLabel',
    CancelRequest: '$CancelRequestLabel',
    RemoveConnection: '$RemoveConnectionLabel',
    Ignore: '$IgnoreLabel'
  }"""
  def spaceGroupId = uicomponent.getSpaceGroupId();

  //params for init UIActivity javascript object
  def params = """ {
    activityId: '${activity.id}',
    placeholderComment: '${placeholder}',
    inputWriteAComment: '$inputWriteAComment',
    commentMinCharactersAllowed: '${uicomponent.getCommentMinCharactersAllowed()}',
    commentMaxCharactersAllowed: '${uicomponent.getCommentMaxCharactersAllowed()}',
    commentFormDisplayed: '$commentFormDisplayed',
    allCommentSize: '${allCommentSize}',
    spaceGroupId: '$spaceGroupId',
    commentFormFocused: '${uicomponent.isCommentFormFocused()}',
    ownerRemoteId: '${ownerRemoteId}',
    labels: $labels
  }""";

  String activityLink = new StringBuilder("<p><a id='editActivityLinkPreview' href='").append(uicomponent.getLinkSource())
                        .append("'>").append(uicomponent.getLinkSource()).append("</a></p>");
  def activityTitle = uicomponent.getDefaultTitle();
  String activityBody = new StringBuilder(activityTitle.split('<oembed>')[0]).append(activityLink);
  String ckEditorType = new StringBuilder("editActivity").append(activity.id);

  //params for init edit composer component
  def composerParams = """ {
    activityId: '${activity.id}',
    composerAction: 'update',
    ckEditorType: '${ckEditorType}',
    activityBody: `${activityBody}`
  } """;

  jsManager.require("SHARED/jquery", "jq")
           .require("SHARED/bts_tooltip").addScripts("jq('*[rel=\"tooltip\"]').tooltip();")
           .require("SHARED/social-ui-activity", "activity").addScripts("activity.onLoad($params);")
           .require("SHARED/ActivityComposer", "activityComposer").addScripts("activityComposer.init($composerParams);");


  //make sure commentFormFocused is set to false to prevent any refresh to focus, only focus after post a comment
  uicomponent.setCommentFormFocused(false);

  String viewActivityTip = _ctx.appRes("UIActivity.msg.ViewActivity");

    def spaceSourceURI, spaceName, spaceImageSource, spaceID;
    if (uicomponent.isUserActivity() && uicomponent.isSpaceStreamOwner() && !uicomponent.isUISpaceActivitiesDisplay()) {

        Space spaceSource = Utils.getSpaceService().getSpaceByPrettyName(streamOwner);
        spaceID = spaceSource.getId();
        if (spaceSource != null) {
            spaceSourceURI = LinkProvider.getSpaceUri(spaceSource.url);
            spaceName = spaceSource.displayName;
            spaceImageSource = spaceSource.getAvatarUrl();
            if (spaceImageSource == null) {
                spaceImageSource = LinkProvider.SPACE_DEFAULT_AVATAR_URL;
            }
        } else {
            spaceSourceURI = LinkProvider.getActivityUriForSpace(streamOwner, streamOwner);
            spaceName = StringEscapeUtils.escapeHtml(Utils.getSpaceIdentity(streamOwner, false).profile.fullName);
            spaceImageSource = LinkProvider.SPACE_DEFAULT_AVATAR_URL;
        }
    }
	def viewerId = Utils.getViewerIdentity().getId();
%>
<div class="activityStream uiActivityStreamWrapper uiLinkActivity" id="activityContainer${activity.id}">
  <% uiform.begin() %>

	  <div class="boxContainer" id="boxContainer">
		<div id="ContextBox${activity.id}" class="uiBox contentBox">
			<div id="ActivityContextBox${activity.id}">
				<div class="heading">
					<span class="arrowLeft"></span>
               <div class="activityHeader">
                <% _ctx.includeTemplates("UIActivityHeading") %>
                <div id="activityComposer"></div>
                <!-- three dots activity menu -->
                    <div id="dropDownEditActivity${activity.id}" class="btn-group uiDropdownWithIcon actLink">
                        <div class="dropdown-toggle" data-toggle="dropdown">
                            <i class="uiIconActivityAction uiIconLightGray">
                            </i>
                        </div>
                        <ul class="dropdown-menu pull-right" role="menu">
                        <li>
                        <a id="Permalink${activity.id}" rel="tooltip" data-placement="bottom" title="$viewActivityTip" href="<%=uicomponent.getActivityPermalink(activity.id)%>">$viewActivityTip</a>
                                            </li>
              <% if(activityEditable) {%>
                            <li>
                                <a id="EditActivitylink${activity.id}" class="" data-edit-activity="${activity.id}" data-placement="bottom" href="javascript:void(0)">${labelEdit}</a>
                            </li>
                            <%
              }
              if (activityDeletable) {
                            %>
                            <li>
                                <a href="javascript:void(0)" data-confirm="$labelToDeleteThisActivity" data-caption="$captionConfirmation" data-close="$labelClosebutton" data-ok="$labelConfirmbutton"  data-delete="<%=uicomponent.event("DeleteActivity", uicomponent.getId(), "");%>" class="controllDelete" id="DeleteActivityButton${activity.id}">${labelDelete}</a>

                            </li>
                            <%}%>
                        </ul>
                    </div>

          </div><!--end activityHeader-->

				</div><!--end heading-->
				   <%
					  String linkSource = uicomponent.getLinkSource();
				   	  String linkTitle = uicomponent.getLinkTitle();
					  if (linkTitle == null || linkTitle.equals("")) {
					    linkTitle = UILinkUtil.simpleEscapeHtml(linkSource);
					  }
					  String linkImage = uicomponent.getLinkImage();
					  String linkDescription = UILinkUtil.simpleEscapeHtml(uicomponent.getLinkDescription());
					  //
					  linkTitle = UILinkUtil.simpleEscapeHtml(Util.getDecodeQueryURL(linkTitle));
					  linkSource = UILinkUtil.simpleEscapeHtml(Util.getDecodeQueryURL(linkSource));
					  def linkMedia = new URL(linkSource);
                      def hostUrl = linkMedia.getHost();
					  //
					  def linkComment = uicomponent.getLinkComment();
					  def link = "";
					  if (linkImage == null || linkImage.equals("")) {
                        link = "<img src=\"/eXoSkin/skin/images/system/composer/PostLinks.png\" class=\"imagePreview\" alt=\"$linkTitle\" />";
					  } else {
						link = "<img src=\"$linkImage\" class=\"imagePreview\" alt=\"$linkTitle\" />";
					  }
					  def embedHtml = uicomponent.getEmbedHtml();
					  def linkClass = "";
					  if ( embedHtml != null ){
					    linkClass = "embedBox";
					  }
					%>
				<% if (linkComment != null && linkComment.length() > 0) { %>
				<div class="description">$linkComment</div>
				<% } %>
                <div class="desktop-input clearfix">
                    <div class="blastInputPeople hideEffect">
                        <div>
                            <% uicomponent.renderChild(uicomponent.COMPOSER_TEXT_AREA_EDIT_INPUT+activity.id); %>
                            <div class="uiAction paddingAction">
                                <button class="btn pull-left btn-primary" onclick="<%=uicomponent.event("EditActivity")%>" id="EditActivityButton${activity.id}">${labelUpdate}</button>&nbsp;
                                <button href="javascript:void(0)" data-cancel-edit-comment-id="${activity.id}" class="btn pull-left" id="DeleteEditCommentButton${activity.id}">${labelCancel}</button>
                            </div>
                        </div>
                    </div>
                </div>
				<div class="uiBox roundedBottom introBox linkShare">
			     	<div class="clearfix linkClass">
					<% if (embedHtml == null && link.length() != 0) { %>
                      <div class="linkPreview">
                      	 <div> <a href="javascript:void(0);" rel="tooltip" data-placement="right" title="$linkTitle" target="_blank">$link</a></div>
                         <div class="boxDescription">
                           <div class="block">
                             <div class="titlePreview"><a target="_blank" href="$linkSource" target="_blank">$linkTitle</a></div>
                             <div class="descriptionLink">$linkDescription</div>
                             <div class="link" ><a href="$linkSource" target="_blank"><i class="far fa-link"></i> $linkSource</a></div>
                           </div>
                         </div>
                      </div>
                      <% } %>
                      <% if (embedHtml != null) { %>
							<div class="EmbedHtml">$embedHtml</div>
							<div class="box">
							  <div class="boxLink">
							    <div class="linkVideo"><a href="$linkSource" target="_blank">$linkSource</a></div>
							  </div>
							  <div class="boxSite link"><p><i class="far fa-link"></i>$hostUrl</p></div>
							</div>
					<% } %>
				</div>
				</div><!--end introBox,linkShare-->
				 <% _ctx.includeTemplates("UIActivityActionBar-actions-mobile") %>
				<% if (embedHtml != null) { %>
          <ul class="statusAction uiActivityActions">
            <li>
              <a href="<%=uicomponent.event("ViewDocument")%>"><i class="uiIconWatch uiIconLightGray"></i>&nbsp;<%=_ctx.appRes("SocialIntegration.view");%></a>
            </li>
          </ul>
        <% } %>
				<div class="actionsDetailsWrapper">
        <% _ctx.includeTemplates("UIActivityListLiked") %>
        <% _ctx.includeTemplates("UIActivityActionBar-actions") %>
        </div>
			  <% _ctx.includeTemplates("UIActivityCommentBox") %>
			</div><!--end #ActivityContextBox${activity.id}-->
		</div> <!--end ContextBox${activity.id}-->
  </div> <!-- #boxContainer-->
  <% uiform.end() %>
</div>
<% } else { %> <!-- activity deleted -->
<div class="activityStream deleted">$labelActivityHasBeenDeleted</div>
<% }%>
