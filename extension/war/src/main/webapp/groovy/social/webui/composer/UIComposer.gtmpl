<%
/*
<!--

    Copyright (C) 2003-2010 eXo Platform SAS.

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU Affero General Public License
    as published by the Free Software Foundation; either version 3
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, see<http://www.gnu.org/licenses/>.

-->
*/
%>

<%
  import org.exoplatform.container.ExoContainerContext;
  import org.exoplatform.commons.api.settings.ExoFeatureService;
  import org.exoplatform.social.core.space.SpaceUtils;
  import org.exoplatform.services.security.Identity;
  import org.exoplatform.services.security.ConversationState;

  ExoFeatureService featureService = ExoContainerContext.getCurrentContainer().getComponentInstanceOfType(ExoFeatureService.class);
  boolean isMainStreamComposerEnabled = System.getProperty("exo.config.mainStreamComposer.enabled").equals("true");
  //check if space has redactors
  Boolean isCurrentUserRedactor = false;
  if(uicomponent.getSpaceGroupId()) {
    String spaceGroupId = uicomponent.getSpaceGroupId();
    String currentUserId = _ctx.getRequestContext().getRemoteUser();
    isCurrentUserRedactor = SpaceUtils.isRedactor(currentUserId, spaceGroupId);
  }
  def space = SpaceUtils.getSpaceByContext();
  def spaceId = space == null ? "" : space.getId();

  if(featureService.isActiveFeature("new-composer")) {
    if (uicomponent.getSpaceGroupId() != null && isCurrentUserRedactor || (isMainStreamComposerEnabled && uicomponent.getSpaceGroupId() == null)) {
%>
<div id="activityComposer" class="activityComposer">
  <v-cacheable-dom-app cache-id="activityComposer_<%=spaceId%>"></v-cacheable-dom-app>
  <script>
    require(['SHARED/jquery', 'SHARED/ActivityComposer'], function(jq, activityComposerApp) {
      activityComposerApp.init();
    });
  </script>
</div>
<%
    }
  }
%>
