<%

  import org.exoplatform.portal.webui.util.Util
  import org.exoplatform.social.webui.Utils;
  import org.exoplatform.social.core.service.LinkProvider;
  import org.apache.commons.lang.StringEscapeUtils;
  import org.exoplatform.webui.form.UIFormTextAreaInput;
  import static org.exoplatform.social.webui.activity.BaseUIActivity.TEMPLATE_PARAM_COMMENT;
  def pcontext = Util.getPortalRequestContext();
  def jsManager = pcontext.getJavascriptManager().require("SHARED/uiForm");

  def labelComment = _ctx.appRes("UIActivity.label.Comment");
  def labelCancel = _ctx.appRes("UIActivity.label.Cancel");
  def labelUpdate = _ctx.appRes("UIActivity.label.Update");
  def labelEdit = _ctx.appRes("UIActivity.label.Edit");
  def labelDelete = _ctx.appRes("UIActivity.label.Delete");
  def labelViewAllReplies = _ctx.appRes("UIActivity.label.ViewAllReplies");
  def labelShowAllComments = _ctx.appRes("UIActivity.label.Show_All_Comments");
  def labelHideAllComments = _ctx.appRes("UIActivity.label.Hide_All_Comments");
  def labelShowPreviousComments = _ctx.appRes("UIActivity.label.Show_Previous_Comments");

  def captionConfirmation=StringEscapeUtils.escapeHtml(_ctx.appRes("UIActivity.label.Confirmation"));
  def labelConfirmbutton=StringEscapeUtils.escapeHtml(_ctx.appRes("UIActivity.label.Confirm_Delete_Activity-Button"));
  def labelClosebutton=StringEscapeUtils.escapeHtml(_ctx.appRes("UIActivity.label.Cancel_Delete_Activity-Button"));
  def labelToDeleteThisComment=StringEscapeUtils.escapeHtml(_ctx.appRes("UIActivity.msg.Are_You_Sure_To_Delete_This_Comment"));

  def activity = uicomponent.getActivity();

  def commentList = uicomponent.getComments();
  int allCommentSize = uicomponent.getAllCommentSize();
  if (allCommentSize > 0) {
    labelShowAllComments = labelShowAllComments.replace("{0}", allCommentSize + "");
    labelHideAllComments = labelHideAllComments.replace("{0}", allCommentSize + "");

  }

  def parentCommentsSize = uicomponent.getParentCommentsSize(commentList);
  def commentsHidden = allCommentSize-parentCommentsSize;

  def commentListStatus = uicomponent.getCommentListStatus();

  //make sures commentFormFocused is set to false to prevent any refresh to focus, only focus after post a comment
  uicomponent.setCommentFormFocused(false);

%>
<div id="CommentBlockBound${activity.id}" class="commentBox ">
<div class="commentList">
<%
def commenterFullName, commenterProfileUri, commentMessage, commentPostedTime, commenterAvatarImgSrc, commentAbsolutePostedTime;
def first = true, commentContentClass;
def commentCounter = 0;
def subCommentSize = 0;
def subCommentIndex = 0;
def subCommentClass = "";
def hideSubComments = true;
def updatedCommentId = uicomponent.getAndSetUpdatedCommentId(null);
def showSubComments = false;
def updatedComment;
if (updatedCommentId) {
updatedComment = Utils.getActivityManager().getActivity(updatedCommentId);
}
commentList.each({
commentCounter++;
if (first & !uicomponent.commentListToggleable()) {
commentContentClass = "commentContent";
first = false;
} else {
commentContentClass = "";
}

def id = Utils.getIdentityManager().getIdentity(it.userId);
commenterFullName = StringEscapeUtils.escapeHtml(id.profile.fullName);
commenterProfileUri = LinkProvider.getUserProfileUri(id.getRemoteId());
def commentParentClass = it.parentCommentId == null ? "CommentBlock" : (subCommentClass + " subCommentBlock");
if(it.parentCommentId == null) {
subCommentSize = uicomponent.getSubCommentsSize(commentList, it.id);
subCommentIndex = 0;
if (updatedCommentId) {
if(updatedComment.parentCommentId == it.id || updatedComment.id == it.id){
showSubComments = true;
} else{
showSubComments = false;
}
}
hideSubComments = subCommentSize > 2 && (updatedCommentId == null || !showSubComments);
if(hideSubComments){
subCommentClass = "hidden";
} else{
subCommentClass = "";
}
} else {
subCommentIndex++;
if(hideSubComments && subCommentIndex == subCommentSize) {
%>
<div class="commentItem clearfix subCommentBlock subCommentShowAll" id="SubCommentShowAll_$it.parentCommentId">
<a href="javascript:void(0)" class="subCommentShowAllLink" data-parent-comment="$it.parentCommentId">
<%=labelViewAllReplies.replace("{0}", String.valueOf(subCommentSize))%>
</a>
		              </div>
<%
}
}
commentMessage = it.title;
commentPostedTime = uicomponent.getRelativeTimeLabel(_ctx, it.postedTime);
commentEditedTime = uicomponent.getRelativeTimeLabel(_ctx, it.updated.getTime());
commentEditedTime = _ctx.appRes("UIActivity.label.EditedFrom").replace("{0}",commentEditedTime);
commentAbsolutePostedTime = uicomponent.getAbsolutePostedTime(it.postedTime);
commenterAvatarImgSrc = id.profile.avatarUrl;
if (!commenterAvatarImgSrc) commenterAvatarImgSrc = LinkProvider.PROFILE_DEFAULT_AVATAR_URL;
def commentId = it.parentCommentId == null ? it.id : it.parentCommentId;
%>
<div id="commentContainer${it.id}" data-comment-id="$commentId" data-parent-comment="$it.parentCommentId" class="$commentParentClass">
<% if(commentCounter == commentList.size()) { %>
<div id="CommentBlock${activity.id}${commentCounter}" class="commentItem commentItemLast">
<% } else { %>
<div id="CommentBlock${it.id}" class="commentItem">
<% }  %>
<div class="commmentLeft">
<a href="$commenterProfileUri" title="$commenterFullName" style="background-image:url('$commenterAvatarImgSrc');" class="avatarXSmall commenterAvatar">
</a>
				</div><!--end commentLeft-->
<div class="commentRight">
<div class="authorCommentContainer clearfix">
<div class="author">
<a href="$commenterProfileUri">$commenterFullName</a>
					</div>
<div class="contentComment" id="${activity.id}-${commentCounter}">
$commentMessage
</div>
        </div>
<div class="desktop-input clearfix">
<div class="blastInputPeople hideEffect">
<div>
<textarea class="textarea hideEffect paddingAction" name="composerEditComment${it.id}" id="composerEditComment${it.id}" rows="10" cols="30"></textarea>
                            </div>
<div class="uiAction">
<button class="btn pull-left btn-primary" data-edit-comment-id="${it.id}" data-edit-comment-activityid="${activity.id}" data-click="<%= uicomponent.event("EditComment","COMMENTID"); %>" id="EditCommentButton${it.id}">${labelUpdate}</button>&nbsp;
                                <button href="javascript:void(0)" data-cancel-edit-comment-id="${it.id}" class="btn pull-left" id="DeleteEditCommentButton${it.id}">${labelCancel}</button>
</div>
                        </div>
</div>
					<%
					    _ctx.put(TEMPLATE_PARAM_COMMENT, it);
                        _ctx.put("authorName", id.remoteId);
                        _ctx.put("authorFullName", commenterFullName);
					    _ctx.put("activityID", activity.id);
					    _ctx.put("commentPostedTime", commentPostedTime);
					    _ctx.put("commentEditedTime", commentEditedTime);
					    _ctx.put("commentAbsolutePostedTime", commentAbsolutePostedTime);
					    _ctx.include("war:/groovy/social/webui/activity/UIActivityCommentActions.gtmpl");
%>
</div><!--end commentRight-->
                    <div class="clearfix"></div>
<%
def commentEditable = uicomponent.isActivityEditable(it);
def commentDeletable = uicomponent.isCommentDeletable(it.userId);
if(commentEditable || commentDeletable) {
%>
<div id="dropDownEditComment${it.id}" class="btn-group uiDropdownWithIcon actLink">
<div class="dropdown-toggle" data-toggle="dropdown">
<i class="uiIconActivityAction uiIconLightGray">
</i>
                            </div>
<ul class="dropdown-menu pull-right" role="menu">
<% if(commentEditable) {%>
<li>
<a id="CommentActivitylink${it.id}" data-edit-comment="${it.id}" class="" href="javascript:void(0)">${labelEdit}</a>
				                </li>
<%
}
if (commentDeletable) {
String idDeleteComment = "DeleteCommentButton${it.id}";
%>
<li>
<a href="javascript:void(0)" id="$idDeleteComment" data-confirm="$labelToDeleteThisComment" data-caption="$captionConfirmation" data-close="$labelClosebutton" data-ok="$labelConfirmbutton"  data-delete="<%= uicomponent.event("DeleteComment", uicomponent.id, it.id); %>"  class="controllDelete">${labelDelete}</a>
				                </li>
<% } %>
</ul>
                        </div>
<%}%>
</div>

			</div>
<% }) %>
</div> <!--end commentlist-->
			<div class="inputContainer" id="InputContainer${activity.id}">
			<%
			  def currentCommenterIdentity = uicomponent.getCommenterIdentity();
			  def currentCommenterUri = LinkProvider.getUserProfileUri(currentCommenterIdentity.getRemoteId());
			  def currentCommenterAvatar = currentCommenterIdentity.profile.avatarUrl;
			  def currentCommenterName = StringEscapeUtils.escapeHtml(currentCommenterIdentity.profile.fullName);
			  if (!currentCommenterAvatar) currentCommenterAvatar= LinkProvider.PROFILE_DEFAULT_AVATAR_URL;
			%>
			<% if (commentList.size() == 0) { %>
			  <div class="commentItem noCommentFormBox" id="CommentFormBlock${activity.id}">
			<% } else { %>
			  <div class="commentItem commentFormBox" id="CommentFormBlock${activity.id}">
			<% } %>
					<div class="commmentLeft">
						<a title="$currentCommenterName" href="$currentCommenterUri" style="background-image:url('$currentCommenterAvatar');" class="avatarXSmall  commenterAvatar">

</a>
					</div><!--end commentLeft-->
<div class="commentRight">
<div class="commentInputBox ">
<div class="commentInput"><% uicomponent.renderChild(UIFormTextAreaInput.class); %></div>
                            <button class="btn pull-left btn-primary" data-comment-button="${activity.id}" data-click="<%= uicomponent.event("PostComment", "COMMENTID") %>" id="CommentButton${activity.id}">$labelComment</button>
<button class="btn visible-phone" id="CancelButton${activity.id}">$labelCancel</button>
						</div>
</div><!--end commentRight-->
                    <div class="clearfix"></div>
</div> <!--end commentItem-->
			  </div><!--end commentlist-->
<% if (uicomponent.commentListToggleable()) {
def showAllCommentsAction = uicomponent.event("SetCommentListStatus", "all");
def hideAllCommentsAction = uicomponent.event("SetCommentListStatus", "none");
def loadPreviousCommentsAction = uicomponent.event("SetCommentListStatus", "all");
%>
<div class="commentListInfo clearfix">
<% if (commentListStatus.getStatus().equals("latest") || commentListStatus.getStatus().equals("none")) { %>
<a onclick="$showAllCommentsAction" href="javascript:void(0);">$labelShowAllComments</a>
				<% } else if (commentListStatus.getStatus().equals("all")) { %>
				      <% if (commentsHidden > 0) { %>
                <a onclick="$loadPreviousCommentsAction" href="javascript:void(0);">$labelShowPreviousComments</a>
<% } else { %>
<a onclick="$hideAllCommentsAction" href="javascript:void(0);">$labelHideAllComments</a>
              <% } %>
			  <% } %>
			  </div>
<% } %>
</div><!--end commentBox-->