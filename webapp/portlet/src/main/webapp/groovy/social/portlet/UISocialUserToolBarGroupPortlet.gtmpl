<%
/*
<!--
This file is part of the Meeds project (https://meeds.io/).
Copyright (C) 2020 Meeds Association
contact@meeds.io
This program is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 3 of the License, or (at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.
You should have received a copy of the GNU Lesser General Public License
along with this program; if not, write to the Free Software Foundation,
Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
-->
*/
%>
<%
  import org.exoplatform.portal.config.model.UserNavigation;
  import org.exoplatform.portal.config.model.UserNode;
  import org.exoplatform.social.webui.Utils;
  import org.exoplatform.webui.organization.OrganizationUtils;
  import org.exoplatform.portal.mop.Visibility;

  def requestContext = _ctx.getRequestContext() ;
  def jsManager = requestContext.getJavascriptManager();
  jsManager.require("SHARED/navigation", "nav").addScripts("nav.UIPortalNavigation.onLoad('" + uicomponent.id + "');");

  def labelGroup = _ctx.appRes("UISocialUserToolBarGroupPortlet.label.group");

  def groupNavigations = uicomponent.getGroupNavigations();
  def portalURI = Utils.getURI("");

  void renderGroupPageNavigation(UserNavigation navigation) {
    def nodes = uicomponent.getNavigationNodes(navigation);
    if(nodes.size() < 1) return ;
    def ownerId = navigation.getKey().getName();
    def countVisibilityNode = 0;
    for (int idx = 0; idx < nodes.size(); idx++) {
      if (nodes.get(idx).getVisibility() == Visibility.HIDDEN) {
        countVisibilityNode = countVisibilityNode + 1;
      }
    }
    if (countVisibilityNode == nodes.size()) return;
    String navTitle = _ctx.appRes("UIPageNavigation.label.titleBar");
    navTitle = navTitle.replace("{0}", OrganizationUtils.getGroupLabel(navigation.ownerId));

    print """
      <li class="TitleBar" title="$navigation.ownerId">$navTitle</li>
    """
    int idx = 0;
    for(UserNode node : nodes) {
        if (node.getVisibility() != Visibility.HIDDEN) {
            renderPageNode(node, ownerId, idx++ % 2 == 0);
         }
    }
  }


  void renderPageNode(UserNode node,String groupId, boolean flag) {
    UserNode selectedNode = uicomponent.getSelectedUserNode();
    String tabStyleNavigation = "";
    if(selectedNode != null && node.getURI() == selectedNode.getURI()) {
      tabStyleNavigation = "SelectedItem";
    }

    boolean hasChild = node.getChildrenCount() > 0;
    String clazz = "";
    if(hasChild) clazz = "ArrowIcon";
    String href = Utils.getSpaceURL(node);
    String icon = node.getIcon();
    if(icon == null) icon = "DefaultPageIcon";
    boolean toolong = (node.resolvedLabel.length() > 60);
    String label = (toolong ? node.resolvedLabel.substring(0, 57) + "..." : node.resolvedLabel);
    String title = "";
    if(toolong) title = "title='$node.resolvedLabel'";
    else title = "";

        
    print """
      <li class="MenuItem $clazz $tabStyleNavigation">
    """

    if(node.getPageRef().format() != null) {
      print """<a class="ItemIcon $icon" href="$href" $title>$label</a>""";
    } else {
      print """<a class="ItemIcon $icon" href="javascript:void(0);" $title>$label</a>""";
    }

    if(hasChild) {
      print """
        <ul class="MenuItemContainer" style="position: absolute; display:none">
      """
      int idx = 0;
      for(UserNode child : node.getChildren()) {
        renderPageNode(child, groupId, idx++ % 2 == 0);
      }
		
      print """
      </ul>
      """;
    }
  print """
    </li>
  """;
  }
%>
<ul class="UIUserToolBarGroupPortlet UIHorizontalTabs" id="$uicomponent.id" style="position: relative;">
	<li class="UITab NormalToolbarTab">
        <a class="GroupIcon TBIcon" href="${portalURI}groupnavigation">$labelGroup</a>
      <% if (!groupNavigations.isEmpty()) { %>
        <ul style="display:none" class="MenuItemContainer">
        <% for(navigation in groupNavigations) {
          renderGroupPageNavigation(navigation);
        } %>
        </ul>
      <% } %>
  </li>
</ul>