<%
/*
<!--
This file is part of the Meeds project (https://meeds.io/).
Copyright (C) 2020 Meeds Association
contact@meeds.io
This program is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 3 of the License, or (at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.
You should have received a copy of the GNU Lesser General Public License
along with this program; if not, write to the Free Software Foundation,
Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
-->
*/
%>
<%
  import org.exoplatform.portal.mop.user.UserNode;
  import org.exoplatform.portal.mop.user.UserNavigation;
  import org.exoplatform.social.webui.Utils;
  import org.exoplatform.webui.organization.OrganizationUtils;
  import org.exoplatform.social.core.space.SpaceUtils;
  import javax.portlet.MimeResponse;
  import javax.portlet.ResourceURL;
  
  def rcontext = _ctx.getRequestContext();
  def jsManager = rcontext.getJavascriptManager();
  jsManager.require("SHARED/navigation", "nav").addScripts("nav.UIPortalNavigation.onLoad('" + uicomponent.id + "');");
  def spacesLink = Utils.getURI("all-spaces");
  def spaceNavigations = uicomponent.getSpaceNavigations();
  
  void renderSpacePageNavigation(UserNavigation navigation) {
    def nodes = uicomponent.getNavigationNodes(navigation);
    if(nodes.size() < 1) return;
    def ownerId = navigation.getKey().getName();
    int idx = 0;
    for(UserNode node : nodes) {
        renderPageNode(node, ownerId, idx++ % 2 == 0);
    }
                            
    
  }
  
  void renderPageNode(UserNode node, String groupId, boolean flag) {
    UserNode selectedNode = uicomponent.getSelectedNode();
    def tabStyleNavigation = "";
    if(selectedNode != null && node.getURI() == selectedNode.getURI()) {
      tabStyleNavigation = "SelectedItem";
    }
    boolean hasChild = (node.getChildren() != null && node.getChildren().size() > 0);
    def clazz = "";
    if(hasChild) clazz = "ArrowIcon";
    def href = Utils.getSpaceURL(node);
    def icon = node.getIcon();
    if(icon == null) icon = "DefaultPageIcon";
    def displayAppName = SpaceUtils.getDisplayAppName(node.resolvedLabel);
    def toolong = (displayAppName.length() > 60);
    def label = (toolong ? displayAppName.substring(0, 57) + "..." : displayAppName);
    def title = "";
    if(toolong == true) { 
      title = "title='$displayAppName'"; 
    } else {
      title = "";
    }
    
    def getNodeURL = "";
    if (hasChild) {
        MimeResponse res = _ctx.getRequestContext().getResponse();
        ResourceURL resourceURL = res.createResourceURL();
        resourceURL.setResourceID(res.encodeURL(groupId + "::" + node.getURI()));   
        getNodeURL = "exo:getNodeURL='" + resourceURL.toString() + "'";
    }
    print """
      <li class="MenuItem $clazz $tabStyleNavigation" $getNodeURL>
    """;
    if(node.pageRef != null) {
      print """<a class="ItemIcon $icon" href="$href" $title>$label</a>""";
    } else {
      print """<a class="ItemIcon $icon" href="javascript:void(0);" $title>$label</a>""";
    }
	
    if(hasChild) {
      print """
       <ul class="MenuItemContainer" style="position: absolute; display:none">
      """;
      
        int idx = 0;
        for(UserNode childNode : node.getChildren()) {
          def isRender = uicomponent.isRender(node, childNode);
           if (isRender) renderPageNode(childNode, groupId, idx++ % 2 == 0);
        }
      print """
        </ul>
      """;
    }
    print """
      </li>
    """;
  }
%> 
<ul class="UIUserToolBarGroupPortlet UIHorizontalTabs" id="$uicomponent.id" style="position: relative;">
	<li class="UITab NormalToolbarTab">
		<a class="SocialSpacesIcon TBIcon" href="<%= spacesLink %>">
		<%=_ctx.appRes("UISpacesToolBarPortlet.label.Spaces")%>
		</a>
        <% if (!spaceNavigations.isEmpty()) { %>
        <ul style="display:none" class="MenuItemContainer">
        <% for(navigation in spaceNavigations) {
          renderSpacePageNavigation(navigation);
           } %>
        </ul>
       <% } %>
  </li>
</ul>
